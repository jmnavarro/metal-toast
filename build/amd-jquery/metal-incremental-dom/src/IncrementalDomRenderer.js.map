{"version":3,"sources":["IncrementalDomRenderer.js"],"names":["IncrementalDomRenderer","comp","context","refs","config_","getInitialConfig","childComponents_","clearChanges_","on","handleAttached_","bind","handleInterceptedAttributesCall_","handleInterceptedCloseCall_","handleInterceptedOpenCall_","handleChildrenCaptured_","handleChildRender_","renderInsidePatchDontSkip_","elementClasses","args","i","length","removeDuplicateClasses_","push","node","component_","wasRendered","attrs","concat","slice","eventName","getEventFromListenerAttr_","attachEvent_","element","key","fn","handleKey","removeListener","setAttribute","getListenerFn","document","removeAttribute","children","emptyChildren_","changes_","ref","owner","getOwner","components","child","isDisposed","dispose","attr","matches","LISTENER_REGEX","exec","toLowerCase","owner_","parent_","config","compatData","renderers","useKey","indexOf","constructor","RENDERER_NAME","tagOrCtor","Ctor","getConstructor","getRef_","data","getCurrentData","match_","addSubComponent","prevComps","keys","currComps","type","order","parentNode","parent","createElement","attachData_","tree","componentToRender_","props","tag","buildChildren_","renderFromTag_","isComponentTag","manager","getDataManager","SYNC_UPDATES_MERGED","handleDataPropChanged_","add","validator","Array","isArray","value","originalFn","name","emit","ELEMENT_CLOSED","resetData_","get","incDomData_","handleSubComponentCall_","apply","arguments","handleRegularCall_","ELEMENT_OPENED","currComp","getComponentBeingRendered","currRenderer","getRenderer","rootElementReached_","addElementClasses_","attachDecoratedListeners_","updateElementIfNotReached_","buildConfigFromCall","getCurrentOwner","getComponent","capture","Object","startInterception","attributes","elementClose","elementOpen","isMatch_","startSkipUpdates","replaceNonInternal","stopSkipUpdates","patch","tempParent","guaranteeParent_","IncrementalDOM","inDocument","renderElement_","sibling","patchOuter","cssClasses","noDuplicates","all","split","used","join","intercept_","render","stopInterception","prototype","renderSubComponent_","elementVoid","shouldUpdate","currentPointer","skipNode","startedRenderingComponent","schedule","renderIncDom","isRendered_","finishedRenderingComponent","ownerRenderer","getSubComponent_","updateContext_","renderer","parentComp","parentRenderer","renderInsidePatch","console","warn","renderAsSubComponent","hasDataChanged_","buildShouldUpdateArgs_","childContext","getChildContext","mixin","renderingComponents_","pop","disposeUnused","currentElement","obj","CHILD_OWNER","fnOrCtor","opt_dataOrElement","opt_parent","isComponentCtor","TempComponent","RENDERER","renderChild"],"mappings":"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","file":"node_modules/metal-incremental-dom/src/IncrementalDomRenderer.js","sourcesContent":["'use strict';\n\nimport './incremental-dom';\nimport {\n\tgetCompatibilityModeData,\n\tgetUid,\n\tisBoolean,\n\tisDef,\n\tisDefAndNotNull,\n\tisString,\n\tobject\n} from 'metal';\nimport { append, delegate, domData, exitDocument } from 'metal-dom';\nimport { Component, ComponentRegistry, ComponentRenderer } from 'metal-component';\nimport IncrementalDomAop from './IncrementalDomAop';\nimport IncrementalDomChildren from './children/IncrementalDomChildren';\nimport IncrementalDomUnusedComponents from './cleanup/IncrementalDomUnusedComponents';\nimport IncrementalDomUtils from './utils/IncrementalDomUtils';\n\n/**\n * Class responsible for rendering components via incremental dom.\n */\nclass IncrementalDomRenderer extends ComponentRenderer {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor(comp) {\n\t\tsuper(comp);\n\n\t\tcomp.context = {};\n\t\tcomp.refs = {};\n\t\tthis.config_ = comp.getInitialConfig();\n\t\tthis.childComponents_ = [];\n\t\tthis.clearChanges_();\n\t\tcomp.on('attached', this.handleAttached_.bind(this));\n\n\t\t// Binds functions that will be used many times, to avoid creating new\n\t\t// functions each time.\n\t\tthis.handleInterceptedAttributesCall_ =\n\t\t\tthis.handleInterceptedAttributesCall_.bind(this);\n\t\tthis.handleInterceptedCloseCall_ =\n\t\t\tthis.handleInterceptedCloseCall_.bind(this);\n\t\tthis.handleInterceptedOpenCall_ =\n\t\t\tthis.handleInterceptedOpenCall_.bind(this);\n\t\tthis.handleChildrenCaptured_ = this.handleChildrenCaptured_.bind(this);\n\t\tthis.handleChildRender_ = this.handleChildRender_.bind(this);\n\t\tthis.renderInsidePatchDontSkip_ = this.renderInsidePatchDontSkip_.bind(this);\n\t}\n\n\t/**\n\t * Adds the given css classes to the specified arguments for an incremental\n\t * dom call, merging with the existing value if there is one.\n\t * @param {string} elementClasses\n\t * @param {!Array} args\n\t * @protected\n\t */\n\taddElementClasses_(elementClasses, args) {\n\t\tfor (var i = 3; i < args.length; i += 2) {\n\t\t\tif (args[i] === 'class') {\n\t\t\t\targs[i + 1] = this.removeDuplicateClasses_(\n\t\t\t\t\targs[i + 1] + ' ' + elementClasses\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\twhile (args.length < 3) {\n\t\t\targs.push(null);\n\t\t}\n\t\targs.push('class', elementClasses);\n\t}\n\n\t/**\n\t * Attaches inline listeners found on the first component render, since those\n\t * may come from existing elements on the page that already have\n\t * data-on[eventname] attributes set to its final value. This won't trigger\n\t * `handleInterceptedAttributesCall_`, so we need manual work to guarantee\n\t * that projects using progressive enhancement like this will still work.\n\t * @param {!Element} node\n\t * @param {!Array} args\n\t * @protected\n\t */\n\tattachDecoratedListeners_(node, args) {\n\t\tif (!this.component_.wasRendered) {\n\t\t\tvar attrs = (args[2] || []).concat(args.slice(3));\n\t\t\tfor (var i = 0; i < attrs.length; i += 2) {\n\t\t\t\tvar eventName = this.getEventFromListenerAttr_(attrs[i]);\n\t\t\t\tif (eventName && !node[eventName + '__handle__']) {\n\t\t\t\t\tthis.attachEvent_(node, attrs[i], eventName, attrs[i + 1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Listens to the specified event, attached via incremental dom calls.\n\t * @param {!Element} element\n\t * @param {string} key\n\t * @param {string} eventName\n\t * @param {function()|string} fn\n\t * @protected\n\t */\n\tattachEvent_(element, key, eventName, fn) {\n\t\tvar handleKey = eventName + '__handle__';\n\t\tif (element[handleKey]) {\n\t\t\telement[handleKey].removeListener();\n\t\t\telement[handleKey] = null;\n\t\t}\n\n\t\telement[key] = fn;\n\t\tif (fn) {\n\t\t\tif (isString(fn)) {\n\t\t\t\tif (key[0] === 'd') {\n\t\t\t\t\t// Allow data-on[eventkey] listeners to stay in the dom, as they\n\t\t\t\t\t// won't cause conflicts.\n\t\t\t\t\telement.setAttribute(key, fn);\n\t\t\t\t}\n\t\t\t\tfn = this.component_.getListenerFn(fn);\n\t\t\t}\n\t\t\telement[handleKey] = delegate(document, eventName, element, fn);\n\t\t} else {\n\t\t\telement.removeAttribute(key);\n\t\t}\n\t}\n\n\t/**\n\t * Builds the \"children\" array to be passed to the current component.\n\t * @param {!Array<!Object>} children\n\t * @return {!Array<!Object>}\n\t * @protected\n\t */\n\tbuildChildren_(children) {\n\t\treturn children.length === 0 ? emptyChildren_ : children;\n\t}\n\n\t/**\n\t * Returns an array with the args that should be passed to the component's\n\t * `shouldUpdate` method. This can be overridden by sub classes to change\n\t * what the method should receive.\n\t * @return {!Array}\n\t * @protected\n\t */\n\tbuildShouldUpdateArgs_() {\n\t\treturn [this.changes_];\n\t}\n\n\t/**\n\t * Clears the changes object.\n\t * @protected;\n\t */\n\tclearChanges_() {\n\t\tthis.changes_ = {};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tdisposeInternal() {\n\t\tsuper.disposeInternal();\n\n\t\tvar comp = this.component_;\n\t\tvar ref = this.config_.ref;\n\t\tvar owner = this.getOwner();\n\t\tif (owner && owner.components && owner.components[ref] === comp) {\n\t\t\tdelete owner.components[ref];\n\t\t}\n\n\t\tfor (var i = 0; i < this.childComponents_.length; i++) {\n\t\t\tconst child = this.childComponents_[i];\n\t\t\tif (!child.isDisposed()) {\n\t\t\t\tchild.element = null;\n\t\t\t\tchild.dispose();\n\t\t\t}\n\t\t}\n\t\tthis.childComponents_ = null;\n\t}\n\n\t/**\n\t * Removes the most recent component from the queue of rendering components.\n\t */\n\tstatic finishedRenderingComponent() {\n\t\trenderingComponents_.pop();\n\t\tif (renderingComponents_.length === 0) {\n\t\t\tIncrementalDomUnusedComponents.disposeUnused();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the component being currently rendered via `IncrementalDomRenderer`.\n\t * @return {Component}\n\t */\n\tstatic getComponentBeingRendered() {\n\t\treturn renderingComponents_[renderingComponents_.length - 1];\n\t}\n\n\t/**\n\t * Gets the data object that should be currently used. This object will either\n\t * come from the current element being rendered by incremental dom or from\n\t * the component instance being rendered (only when the current element is the\n\t * component's direct parent).\n\t * @return {!Object}\n\t */\n\tstatic getCurrentData() {\n\t\tvar element = IncrementalDOM.currentElement();\n\t\tvar comp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar renderer = comp.getRenderer();\n\t\tvar obj = renderer;\n\t\tif (renderer.rootElementReached_ && element !== comp.element.parentNode) {\n\t\t\tobj = domData.get(element);\n\t\t}\n\t\tobj.incDomData_ = obj.incDomData_ || {\n\t\t\tcurrComps: {\n\t\t\t\tkeys: {},\n\t\t\t\torder: {}\n\t\t\t},\n\t\t\tprevComps: {\n\t\t\t\tkeys: {},\n\t\t\t\torder: {}\n\t\t\t}\n\t\t};\n\t\treturn obj.incDomData_;\n\t}\n\n\t/**\n\t * Returns the event name if the given attribute is a listener (of the form\n\t * \"on<EventName>\"), or null if it isn't.\n\t * @param {string} attr\n\t * @return {?string}\n\t * @protected\n\t */\n\tgetEventFromListenerAttr_(attr) {\n\t\tvar matches = IncrementalDomRenderer.LISTENER_REGEX.exec(attr);\n\t\tvar eventName = matches ? (matches[1] ? matches[1] : matches[2]) : null;\n\t\treturn eventName ? eventName.toLowerCase() : null;\n\t}\n\n\t/**\n\t * Gets the component that is this component's owner (that is, the one that\n\t * passed its data and holds its ref), or null if there's none.\n\t * @return {Component}\n\t */\n\tgetOwner() {\n\t\treturn this.owner_;\n\t}\n\n\t/**\n\t * Gets the component that is this component's parent (that is, the one that\n\t * actually rendered it), or null if there's no parent.\n\t * @return {Component}\n\t */\n\tgetParent() {\n\t\treturn this.parent_;\n\t}\n\n\t/**\n\t * Returns the \"ref\" to be used for a component. Uses \"key\" as \"ref\" when\n\t * compatibility mode is on for the current renderer.\n\t * @param {!Object} config\n\t * @param {?string} ref\n\t * @protected\n\t */\n\tgetRef_(config) {\n\t\tconst compatData = getCompatibilityModeData();\n\t\tif (compatData) {\n\t\t\tconst renderers = compatData.renderers;\n\t\t\tconst useKey = !renderers ||\n\t\t\t\trenderers.indexOf(this.constructor) !== -1 ||\n\t\t\t\trenderers.indexOf(this.constructor.RENDERER_NAME) !== -1;\n\t\t\tif (useKey && config.key && !config.ref) {\n\t\t\t\treturn config.key;\n\t\t\t}\n\t\t}\n\t\treturn config.ref;\n\t}\n\n\t/**\n\t * Gets the sub component referenced by the given tag and config data,\n\t * creating it if it doesn't yet exist.\n\t * @param {string|!Function} tagOrCtor The tag name.\n\t * @param {!Object} config The config object for the sub component.\n\t * @param {!Component} owner\n\t * @return {!Component} The sub component.\n\t * @protected\n\t */\n\tgetSubComponent_(tagOrCtor, config, owner) {\n\t\tvar Ctor = tagOrCtor;\n\t\tif (isString(Ctor)) {\n\t\t\tCtor = ComponentRegistry.getConstructor(tagOrCtor);\n\t\t}\n\n\t\tconst ref = this.getRef_(config);\n\t\tvar data = IncrementalDomRenderer.getCurrentData();\n\t\tvar comp;\n\t\tif (isDef(ref)) {\n\t\t\tcomp = this.match_(owner.components[ref], Ctor, config);\n\t\t\towner.addSubComponent(ref, comp);\n\t\t\towner.refs[ref] = comp;\n\t\t} else if (isDef(config.key)) {\n\t\t\tcomp = this.match_(data.prevComps.keys[config.key], Ctor, config);\n\t\t\tdata.currComps.keys[config.key] = comp;\n\t\t} else {\n\t\t\tvar type = getUid(Ctor, true);\n\t\t\tdata.currComps.order[type] = data.currComps.order[type] || [];\n\t\t\tvar order = data.currComps.order[type];\n\t\t\tcomp = this.match_((data.prevComps.order[type] || [])[order.length], Ctor, config);\n\t\t\torder.push(comp);\n\t\t}\n\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Guarantees that the component's element has a parent. That's necessary\n\t * when calling incremental dom's `patchOuter` for now, as otherwise it will\n\t * throw an error if the element needs to be replaced.\n\t * @return {Element} The parent, in case it was added.\n\t * @protected\n\t */\n\tguaranteeParent_() {\n\t\tvar element = this.component_.element;\n\t\tif (!element || !element.parentNode) {\n\t\t\tvar parent = document.createElement('div');\n\t\t\tif (element) {\n\t\t\t\tappend(parent, element);\n\t\t\t}\n\t\t\treturn parent;\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `attached` listener. Stores attach data.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleAttached_(data) {\n\t\tthis.attachData_ = data;\n\t}\n\n\t/**\n\t * Handles the event of children having finished being captured.\n\t * @param {!Object} The captured children in tree format.\n\t * @protected\n\t */\n\thandleChildrenCaptured_(tree) {\n\t\tvar {props, tag} = this.componentToRender_;\n\t\tprops.children = this.buildChildren_(tree.props.children);\n\t\tthis.componentToRender_ = null;\n\t\tthis.renderFromTag_(tag, props);\n\t}\n\n\t/**\n\t * Handles a child being rendered via `IncrementalDomChildren.render`. Skips\n\t * component nodes so that they can be rendered the correct way without\n\t * having to recapture both them and their children via incremental dom.\n\t * @param {!Object} node\n\t * @return {boolean}\n\t * @protected\n\t */\n\thandleChildRender_(node) {\n\t\tif (node.tag && IncrementalDomUtils.isComponentTag(node.tag)) {\n\t\t\tnode.props.children = this.buildChildren_(node.props.children);\n\t\t\tthis.renderFromTag_(node.tag, node.props);\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\thandleDataManagerCreated_() {\n\t\tsuper.handleDataManagerCreated_();\n\n\t\tvar manager = this.component_.getDataManager();\n\t\tif (!this.component_.constructor.SYNC_UPDATES_MERGED) {\n\t\t\t// If the component is being updated synchronously we'll just reuse the\n\t\t\t// `handleComponentRendererStateKeyChanged_` function from\n\t\t\t// `ComponentRenderer`.\n\t\t\tmanager.on('dataPropChanged', this.handleDataPropChanged_.bind(this));\n\t\t}\n\n\t\tmanager.add(\n\t\t\t'children',\n\t\t\t{\n\t\t\t\tvalidator: Array.isArray,\n\t\t\t\tvalue: emptyChildren_\n\t\t\t},\n\t\t\tthis.config_.children || emptyChildren_\n\t\t);\n\t}\n\n\t/**\n\t * Handles the `dataPropChanged` event. Stores data that has changed since the\n\t * last render.\n\t * @param {!Object} data\n\t * @protected\n\t */\n\thandleDataPropChanged_(data) {\n\t\tthis.changes_[data.key] = data;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the attributes default handler from\n\t * incremental dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {!Element} element\n\t * @param {string} name\n\t * @param {*} value\n\t * @protected\n\t */\n\thandleInterceptedAttributesCall_(originalFn, element, name, value) {\n\t\tvar eventName = this.getEventFromListenerAttr_(name);\n\t\tif (eventName) {\n\t\t\tthis.attachEvent_(element, name, eventName, value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (name === 'checked') {\n\t\t\t// This is a temporary fix to account for incremental dom setting\n\t\t\t// \"checked\" as an attribute only, which can cause bugs since that won't\n\t\t\t// necessarily check/uncheck the element it's set on. See\n\t\t\t// https://github.com/google/incremental-dom/issues/198 for more details.\n\t\t\tvalue = isDefAndNotNull(value) && value !== false;\n\t\t}\n\n\t\tif (name === 'value' && element.value !== value) {\n\t\t\t// This is a temporary fix to account for incremental dom setting\n\t\t\t// \"value\" as an attribute only, which can cause bugs since that won't\n\t\t\t// necessarily update the input's content it's set on. See\n\t\t\t// https://github.com/google/incremental-dom/issues/239 for more details.\n\t\t\t// We only do this if the new value is different though, as otherwise the\n\t\t\t// browser will automatically move the typing cursor to the end of the\n\t\t\t// field.\n\t\t\telement[name] = value;\n\t\t}\n\n\t\tif (isBoolean(value)) {\n\t\t\t// Incremental dom sets boolean values as string data attributes, which\n\t\t\t// is counter intuitive. This changes the behavior to use the actual\n\t\t\t// boolean value.\n\t\t\telement[name] = value;\n\t\t\tif (value) {\n\t\t\t\telement.setAttribute(name, '');\n\t\t\t} else {\n\t\t\t\telement.removeAttribute(name);\n\t\t\t}\n\t\t} else {\n\t\t\toriginalFn(element, name, value);\n\t\t}\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementClose` function from incremental\n\t * dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedCloseCall_(originalFn, tag) {\n\t\tthis.emit(IncrementalDomRenderer.ELEMENT_CLOSED, {tag});\n\t\tvar element = originalFn(tag);\n\t\tthis.resetData_(domData.get(element).incDomData_);\n\t\treturn element;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @param {string} tag\n\t * @protected\n\t */\n\thandleInterceptedOpenCall_(originalFn, tag) {\n\t\tif (IncrementalDomUtils.isComponentTag(tag)) {\n\t\t\treturn this.handleSubComponentCall_.apply(this, arguments);\n\t\t} else {\n\t\t\treturn this.handleRegularCall_.apply(this, arguments);\n\t\t}\n\t}\n\n\t/**\n\t * Handles the `dataPropChanged` event. Overrides original method from\n\t * `ComponentRenderer` to guarantee that `IncrementalDomRenderer`'s logic\n\t * will run first.\n\t * @param {!Object} data\n\t * @override\n\t * @protected\n\t */\n\thandleManagerDataPropChanged_(data) {\n\t\tthis.handleDataPropChanged_(data);\n\t\tsuper.handleManagerDataPropChanged_(data);\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a regular element. Adds any inline listeners found on the\n\t * first render and makes sure that component root elements are always reused.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @protected\n\t */\n\thandleRegularCall_(originalFn, ...args) {\n\t\tthis.emit(IncrementalDomRenderer.ELEMENT_OPENED, {args});\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_) {\n\t\t\tif (currRenderer.config_.key) {\n\t\t\t\targs[1] = currRenderer.config_.key;\n\t\t\t}\n\t\t\tvar elementClasses = currComp.getDataManager().get('elementClasses');\n\t\t\tif (elementClasses) {\n\t\t\t\tthis.addElementClasses_(elementClasses, args);\n\t\t\t}\n\t\t}\n\n\n\t\tvar node = originalFn.apply(null, args);\n\t\tthis.attachDecoratedListeners_(node, args);\n\t\tthis.updateElementIfNotReached_(node);\n\n\t\tconst config = IncrementalDomUtils.buildConfigFromCall(args);\n\t\tif (isDefAndNotNull(config.ref)) {\n\t\t\tconst owner = IncrementalDomChildren.getCurrentOwner() || this;\n\t\t\towner.getComponent().refs[config.ref] = node;\n\t\t}\n\t\treturn node;\n\t}\n\n\t/**\n\t * Handles an intercepted call to the `elementOpen` function from incremental\n\t * dom, done for a sub component element. Creates and updates the appropriate\n\t * sub component.\n\t * @param {!function()} originalFn The original function before interception.\n\t * @protected\n\t */\n\thandleSubComponentCall_(originalFn, ...args) {\n\t\tvar props = IncrementalDomUtils.buildConfigFromCall(args);\n\t\tthis.componentToRender_ = {\n\t\t\tprops,\n\t\t\ttag: args[0]\n\t\t};\n\t\tIncrementalDomChildren.capture(this, this.handleChildrenCaptured_);\n\t}\n\n\t/**\n\t * Checks if the component's data has changed.\n\t * @return {boolean}\n\t * @protected\n\t */\n\thasDataChanged_() {\n\t\treturn Object.keys(this.changes_).length > 0;\n\t}\n\n\t/**\n\t * Intercepts incremental dom calls from this component.\n\t * @protected\n\t */\n\tintercept_() {\n\t\tIncrementalDomAop.startInterception({\n\t\t\tattributes: this.handleInterceptedAttributesCall_,\n\t\t\telementClose: this.handleInterceptedCloseCall_,\n\t\t\telementOpen: this.handleInterceptedOpenCall_\n\t\t});\n\t}\n\n\t/**\n\t * Checks if the given object is an incremental dom node.\n\t * @param {!Object} node\n\t * @return {boolean}\n\t */\n\tstatic isIncDomNode(node) {\n\t\treturn !!node[IncrementalDomChildren.CHILD_OWNER];\n\t}\n\n\t/**\n\t * Checks if the given component can be a match for a constructor.\n\t * @param {!Component} comp\n\t * @param {!function()} Ctor\n\t * @return {boolean}\n\t * @protected\n\t */\n\tisMatch_(comp, Ctor) {\n\t\tif (!comp || comp.constructor !== Ctor || comp.isDisposed()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn comp.getRenderer().getOwner() === this.component_;\n\t}\n\n\t/**\n\t * Returns the given component if it matches the specified constructor\n\t * function. Otherwise, returns a new instance of the given constructor. On\n\t * both cases the component's state and config will be updated.\n\t * @param {Component} comp\n\t * @param {!function()} Ctor\n\t * @param {!Object} config\n\t * @return {!Component}\n\t * @protected\n\t */\n\tmatch_(comp, Ctor, config) {\n\t\tif (!this.isMatch_(comp, Ctor)) {\n\t\t\tcomp = new Ctor(config, false);\n\t\t}\n\t\tif (comp.wasRendered) {\n\t\t\tcomp.getRenderer().startSkipUpdates();\n\t\t\tcomp.getDataManager().replaceNonInternal(config);\n\t\t\tcomp.getRenderer().stopSkipUpdates();\n\t\t}\n\t\tcomp.getRenderer().config_ = config;\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Patches the component's element with the incremental dom function calls\n\t * done by `renderInsidePatchDontSkip_`.\n\t */\n\tpatch() {\n\t\tif (!this.component_.element && this.parent_) {\n\t\t\t// If the component has no content but was rendered from another component,\n\t\t\t// we'll need to patch this parent to make sure that any new content will\n\t\t\t// be added in the right place.\n\t\t\tthis.parent_.getRenderer().patch();\n\t\t\treturn;\n\t\t}\n\n\t\tvar tempParent = this.guaranteeParent_();\n\t\tif (tempParent) {\n\t\t\tIncrementalDOM.patch(tempParent, this.renderInsidePatchDontSkip_);\n\t\t\texitDocument(this.component_.element);\n\t\t\tif (this.component_.element && this.component_.inDocument) {\n\t\t\t\tthis.component_.renderElement_(\n\t\t\t\t\tthis.attachData_.parent,\n\t\t\t\t\tthis.attachData_.sibling\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tconst element = this.component_.element;\n\t\t\tIncrementalDOM.patchOuter(element, this.renderInsidePatchDontSkip_);\n\t\t}\n\t}\n\n\t/**\n\t * Removes duplicate css classes from the given string.\n\t * @param {string} cssClasses\n\t * @return {string}\n\t * @protected\n\t */\n\tremoveDuplicateClasses_(cssClasses) {\n\t\tvar noDuplicates = [];\n\t\tvar all = cssClasses.split(/\\s+/);\n\t\tvar used = {};\n\t\tfor (var i = 0; i < all.length; i++) {\n\t\t\tif (!used[all[i]]) {\n\t\t\t\tused[all[i]] = true;\n\t\t\t\tnoDuplicates.push(all[i]);\n\t\t\t}\n\t\t}\n\t\treturn noDuplicates.join(' ');\n\t}\n\n\t/**\n\t * Creates and renders the given function, which can either be a simple\n\t * incremental dom function or a component constructor.\n\t * @param {!function()} fnOrCtor Either be a simple incremental dom function\n\t or a component constructor.\n\t * @param {Object|Element=} opt_dataOrElement Optional config data for the\n\t *     function or parent for the rendered content.\n\t * @param {Element=} opt_parent Optional parent for the rendered content.\n\t * @return {!Component} The rendered component's instance.\n\t */\n\tstatic render(fnOrCtor, opt_dataOrElement, opt_parent) {\n\t\tif (!Component.isComponentCtor(fnOrCtor)) {\n\t\t\tvar fn = fnOrCtor;\n\t\t\tclass TempComponent extends Component {\n\t\t\t\tcreated() {\n\t\t\t\t\tif (IncrementalDomRenderer.getComponentBeingRendered()) {\n\t\t\t\t\t\tthis.getRenderer().updateContext_(this);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\trender() {\n\t\t\t\t\tfn(this.getRenderer().config_);\n\t\t\t\t}\n\t\t\t}\n\t\t\tTempComponent.RENDERER = IncrementalDomRenderer;\n\t\t\tfnOrCtor = TempComponent;\n\t\t}\n\t\treturn Component.render(fnOrCtor, opt_dataOrElement, opt_parent);\n\t}\n\n\t/**\n\t * Renders the renderer's component for the first time, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`.\n\t */\n\trender() {\n\t\tthis.patch();\n\t}\n\n\t/**\n\t * Renders the given child node via its owner renderer.\n\t * @param {!Object} child\n\t */\n\tstatic renderChild(child) {\n\t\tchild[IncrementalDomChildren.CHILD_OWNER].renderChild(child);\n\t}\n\n\t/**\n\t * Renders the given child node.\n\t * @param {!Object} child\n\t */\n\trenderChild(child) {\n\t\tthis.intercept_();\n\t\tIncrementalDomChildren.render(child, this.handleChildRender_);\n\t\tIncrementalDomAop.stopInterception();\n\t}\n\n\t/**\n\t * Renders the contents for the given tag.\n\t * @param {!function()|string} tag\n\t * @param {!Object} config\n\t * @protected\n\t */\n\trenderFromTag_(tag, config) {\n\t\tif (isString(tag) || tag.prototype.getRenderer) {\n\t\t\tvar comp = this.renderSubComponent_(tag, config);\n\t\t\tthis.updateElementIfNotReached_(comp.element);\n\t\t\treturn comp.element;\n\t\t} else {\n\t\t\treturn tag(config);\n\t\t}\n\t}\n\n\t/**\n\t * Calls functions from `IncrementalDOM` to build the component element's\n\t * content. Can be overriden by subclasses (for integration with template\n\t * engines for example).\n\t */\n\trenderIncDom() {\n\t\tif (this.component_.render) {\n\t\t\tthis.component_.render();\n\t\t} else {\n\t\t\tIncrementalDOM.elementVoid('div');\n\t\t}\n\t}\n\n\t/**\n\t * Runs the incremental dom functions for rendering this component, but\n\t * doesn't call `patch` yet. Rather, this will be the function that should be\n\t * called by `patch`.\n\t */\n\trenderInsidePatch() {\n\t\tif (this.component_.wasRendered &&\n\t\t\t!this.shouldUpdate() &&\n\t\t\tIncrementalDOM.currentPointer() === this.component_.element) {\n\t\t\tif (this.component_.element) {\n\t\t\t\tIncrementalDOM.skipNode();\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tthis.renderInsidePatchDontSkip_();\n\t}\n\n\t/**\n\t * The same as `renderInsidePatch`, but without the check that may skip the\n\t * render action.\n\t * @protected\n\t */\n\trenderInsidePatchDontSkip_() {\n\t\tIncrementalDomRenderer.startedRenderingComponent(this.component_);\n\t\tthis.clearChanges_();\n\t\tthis.rootElementReached_ = false;\n\t\tIncrementalDomUnusedComponents.schedule(this.childComponents_);\n\t\tthis.childComponents_ = [];\n\t\tthis.component_.refs = {};\n\t\tthis.intercept_();\n\t\tthis.renderIncDom();\n\t\tIncrementalDomAop.stopInterception();\n\t\tif (!this.rootElementReached_) {\n\t\t\tthis.component_.element = null;\n\t\t}\n\t\tthis.emit('rendered', !this.isRendered_);\n\t\tIncrementalDomRenderer.finishedRenderingComponent();\n\t\tthis.resetData_(this.incDomData_);\n\t}\n\n\t/**\n\t * This updates the sub component that is represented by the given data.\n\t * The sub component is created, added to its parent and rendered. If it\n\t * had already been rendered before though, it will only have its state\n\t * updated instead.\n\t * @param {string|!function()} tagOrCtor The tag name or constructor function.\n\t * @param {!Object} config The config object for the sub component.\n\t * @return {!Component} The updated sub component.\n\t * @protected\n\t */\n\trenderSubComponent_(tagOrCtor, config) {\n\t\tconst ownerRenderer = IncrementalDomChildren.getCurrentOwner() || this;\n\t\tconst owner = ownerRenderer.getComponent();\n\t\tvar comp = this.getSubComponent_(tagOrCtor, config, owner);\n\t\tthis.updateContext_(comp);\n\t\tvar renderer = comp.getRenderer();\n\t\tif (renderer instanceof IncrementalDomRenderer) {\n\t\t\tconst parentComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\t\tconst parentRenderer = parentComp.getRenderer();\n\t\t\tparentRenderer.childComponents_.push(comp);\n\t\t\trenderer.parent_ = parentComp;\n\t\t\trenderer.owner_ = owner;\n\t\t\tif (!config.key && !parentRenderer.rootElementReached_) {\n\t\t\t\tconfig.key = parentRenderer.config_.key;\n\t\t\t}\n\t\t\trenderer.renderInsidePatch();\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t'IncrementalDomRenderer doesn\\'t support rendering sub components ' +\n\t\t\t\t'that don\\'t use IncrementalDomRenderer as well, like:',\n\t\t\t\tcomp\n\t\t\t);\n\t\t}\n\t\tif (!comp.wasRendered) {\n\t\t\tcomp.renderAsSubComponent();\n\t\t}\n\t\treturn comp;\n\t}\n\n\t/**\n\t * Resets the given incremental dom data object, preparing it for the next\n\t * pass.\n\t * @param {Object} data\n\t * @protected\n\t */\n\tresetData_(data) {\n\t\tif (data) {\n\t\t\tdata.prevComps.keys = data.currComps.keys;\n\t\t\tdata.prevComps.order = data.currComps.order;\n\t\t\tdata.currComps.keys = {};\n\t\t\tdata.currComps.order = {};\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the component should be updated with the current state changes.\n\t * Can be overridden by subclasses or implemented by components to provide\n\t * customized behavior (only updating when a state property used by the\n\t * template changes, for example).\n\t * @return {boolean}\n\t */\n\tshouldUpdate() {\n\t\tif (!this.hasDataChanged_()) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.component_.shouldUpdate) {\n\t\t\treturn this.component_.shouldUpdate(...this.buildShouldUpdateArgs_());\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Skips the next disposal of children components, by clearing the array as\n\t * if there were no children rendered the last time. This can be useful for\n\t * allowing components to be reused by other parent components in separate\n\t * render update cycles.\n\t */\n\tskipNextChildrenDisposal() {\n\t\tthis.childComponents_ = [];\n\t}\n\n\t/**\n\t * Stores the component that has just started being rendered.\n\t * @param {!Component} comp\n\t */\n\tstatic startedRenderingComponent(comp) {\n\t\trenderingComponents_.push(comp);\n\t}\n\n\t/**\n\t * Updates the renderer's component when state changes, patching its element\n\t * through the incremental dom function calls done by `renderIncDom`. Makes\n\t * sure that it won't cause a rerender if the only change was for the\n\t * \"element\" property.\n\t */\n\tupdate() {\n\t\tif (this.shouldUpdate()) {\n\t\t\tthis.patch();\n\t\t}\n\t}\n\n\t/**\n\t * Updates this renderer's component's element with the given values, unless\n\t * it has already been reached by an earlier call.\n\t * @param {!Element} node\n\t * @protected\n\t */\n\tupdateElementIfNotReached_(node) {\n\t\tvar currComp = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar currRenderer = currComp.getRenderer();\n\t\tif (!currRenderer.rootElementReached_) {\n\t\t\tcurrRenderer.rootElementReached_ = true;\n\t\t\tif (currComp.element !== node) {\n\t\t\t\tcurrComp.element = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Updates the given component's context according to the data from the\n\t * component that is currently being rendered.\n\t * @param {!Component} comp\n\t * @protected\n\t */\n\tupdateContext_(comp) {\n\t\tvar context = comp.context;\n\t\tvar parent = IncrementalDomRenderer.getComponentBeingRendered();\n\t\tvar childContext = parent.getChildContext ? parent.getChildContext() : {};\n\t\tobject.mixin(context, parent.context, childContext);\n\t\tcomp.context = context;\n\t}\n}\n\nvar renderingComponents_ = [];\nvar emptyChildren_ = [];\n\n// Constants used as event names.\nIncrementalDomRenderer.ELEMENT_OPENED = 'elementOpened';\nIncrementalDomRenderer.ELEMENT_CLOSED = 'elementClosed';\n\n// Regex pattern used to find inline listeners.\nIncrementalDomRenderer.LISTENER_REGEX = /^(?:on([A-Z]\\w+))|(?:data-on(\\w+))$/;\n\n// Name of this renderer. Renderers should provide this as a way to identify\n// them via a simple string (when calling enableCompatibilityMode to add\n// support to old features for specific renderers for example).\nIncrementalDomRenderer.RENDERER_NAME = 'incremental-dom';\n\nexport default IncrementalDomRenderer;\n"],"sourceRoot":"/source/"}