{"version":3,"sources":["IncrementalDomUnusedComponents.js"],"names":["comps_","IncrementalDomUnusedComponents","i","length","isDisposed","renderer","getRenderer","getParent","element","ref","config","owner","getOwner","components","disposeSubComponents","dispose","comps","parent_","push"],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,KAAIA,SAAS,EAAb;;KAEMC,8B;;;;;;;mCAKkB;AACtB,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,OAAOG,MAA3B,EAAmCD,GAAnC,EAAwC;AACvC,SAAI,CAACF,OAAOE,CAAP,EAAUE,UAAV,EAAL,EAA6B;AAC5B,UAAIC,WAAWL,OAAOE,CAAP,EAAUI,WAAV,EAAf;AACA,UAAI,CAACD,SAASE,SAAT,EAAL,EAA2B;AAC1B;AACA;AACAP,cAAOE,CAAP,EAAUM,OAAV,GAAoB,IAApB;;AAEA,WAAIC,MAAMT,OAAOE,CAAP,EAAUQ,MAAV,CAAiBD,GAA3B;AACA,WAAIE,QAAQN,SAASO,QAAT,EAAZ;AACA,WAAID,MAAME,UAAN,CAAiBJ,GAAjB,MAA0BT,OAAOE,CAAP,CAA9B,EAAyC;AACxCS,cAAMG,oBAAN,CAA2B,CAACL,GAAD,CAA3B;AACA,QAFD,MAEO;AACNT,eAAOE,CAAP,EAAUa,OAAV;AACA;AACD;AACD;AACD;AACDf,aAAS,EAAT;AACA;;;4BAOegB,K,EAAO;AACtB,SAAK,IAAId,IAAI,CAAb,EAAgBA,IAAIc,MAAMb,MAA1B,EAAkCD,GAAlC,EAAuC;AACtCc,WAAMd,CAAN,EAASI,WAAT,GAAuBW,OAAvB,GAAiC,IAAjC;AACAjB,YAAOkB,IAAP,CAAYF,MAAMd,CAAN,CAAZ;AACA;AACD;;;;;;mBAGaD,8B","file":"node_modules/metal-incremental-dom/src/cleanup/IncrementalDomUnusedComponents.js","sourcesContent":["'use strict';\n\nvar comps_ = [];\n\nclass IncrementalDomUnusedComponents {\n\t/**\n\t * Disposes all sub components that were not rerendered since the last\n\t * time this function was scheduled.\n\t */\n\tstatic disposeUnused() {\n\t\tfor (var i = 0; i < comps_.length; i++) {\n\t\t\tif (!comps_[i].isDisposed()) {\n\t\t\t\tvar renderer = comps_[i].getRenderer();\n\t\t\t\tif (!renderer.getParent()) {\n\t\t\t\t\t// Don't let disposing cause the element to be removed, since it may\n\t\t\t\t\t// be currently being reused by another component.\n\t\t\t\t\tcomps_[i].element = null;\n\n\t\t\t\t\tvar ref = comps_[i].config.ref;\n\t\t\t\t\tvar owner = renderer.getOwner();\n\t\t\t\t\tif (owner.components[ref] === comps_[i]) {\n\t\t\t\t\t\towner.disposeSubComponents([ref]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcomps_[i].dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcomps_ = [];\n\t}\n\n\t/**\n\t * Schedules the given components to be checked and disposed if not used\n\t * anymore, when `IncrementalDomUnusedComponents.disposeUnused` is called.\n\t * @param {!Array<!Component} comps\n\t */\n\tstatic schedule(comps) {\n\t\tfor (var i = 0; i < comps.length; i++) {\n\t\t\tcomps[i].getRenderer().parent_ = null;\n\t\t\tcomps_.push(comps[i]);\n\t\t}\n\t}\n}\n\nexport default IncrementalDomUnusedComponents;\n"],"sourceRoot":"/source/"}