{"version":3,"sources":["Soy.js"],"names":["ijData","Soy","elementTemplate","component_","constructor","TEMPLATE","getOriginalFn","soyParamTypes_","types","keys","params","component","state","getDataManager","getStateInstance","i","length","hasStateKey","addToState","getInitialConfig","data","mixin","config_","getStateKeys","forEach","value","key","isHtmlParam_","toIncDom","bind","addMissingStateKeys_","name","getStateKeyConfig","isHtml","type","split","indexOf","render","startInterception","handleInterceptedCall_","buildTemplateData_","stopInterception","should","shouldUpdate","fn","changes_","namespace","templateName","opt_data","opt_ignored","opt_ijData","goog","loadedModules_","Error","originalFn","args","componentCtor","push","IncrementalDOM","elementVoid","apply","templates","mainTemplate","RENDERER","registerForInterception","register","incDomFn","element","document","createElement","patch","innerHTML","content","contentKind","buildFn","RENDERER_NAME","SoyAop"],"mappings":"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","file":"node_modules/metal-soy/src/Soy.js","sourcesContent":["'use strict';\n\nimport 'metal-soy-bundle';\nimport { isFunction, isObject, isString, object } from 'metal';\nimport { ComponentRegistry } from 'metal-component';\nimport HTML2IncDom from 'html2incdom';\nimport IncrementalDomRenderer from 'metal-incremental-dom';\nimport SoyAop from './SoyAop';\n\n// The injected data that will be passed to soy templates.\nvar ijData = {};\n\nclass Soy extends IncrementalDomRenderer {\n\t/**\n\t * Adds the template params to the component's state, if they don't exist yet.\n\t * @protected\n\t */\n\taddMissingStateKeys_() {\n\t\tvar elementTemplate = this.component_.constructor.TEMPLATE;\n\t\tif (!isFunction(elementTemplate)) {\n\t\t\treturn;\n\t\t}\n\n\t\telementTemplate = SoyAop.getOriginalFn(elementTemplate);\n\t\tthis.soyParamTypes_ = elementTemplate.types || {};\n\n\t\tvar keys = elementTemplate.params || [];\n\t\tvar component = this.component_;\n\t\tvar state = component.getDataManager().getStateInstance();\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tif (!state.hasStateKey(keys[i]) && !component[keys[i]]) {\n\t\t\t\tstate.addToState(keys[i], {}, component.getInitialConfig()[keys[i]]);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Copies the component's state to an object so it can be passed as it's\n\t * template call's data. The copying needs to be done because, if the component\n\t * itself is passed directly, some problems occur when soy tries to merge it\n\t * with other data, due to property getters and setters. This is safer.\n\t * @param {!Array<string>} params The params used by this template.\n\t * @return {!Object}\n\t * @protected\n\t */\n\tbuildTemplateData_(params) {\n\t\tvar component = this.component_;\n\t\tvar data = object.mixin({}, this.config_);\n\t\tcomponent.getStateKeys().forEach(key => {\n\t\t\tvar value = component[key];\n\t\t\tif (this.isHtmlParam_(key)) {\n\t\t\t\tvalue = Soy.toIncDom(value);\n\t\t\t}\n\t\t\tdata[key] = value;\n\t\t});\n\t\tfor (var i = 0; i < params.length; i++) {\n\t\t\tif (!data[params[i]] && isFunction(component[params[i]])) {\n\t\t\t\tdata[params[i]] = component[params[i]].bind(component);\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t}\n\n\t/**\n\t * Returns the requested template function. This function will be wrapped in\n\t * another though, just to defer the requirement of the template's module\n\t * being ready until the function is actually called.\n\t * @param {string} namespace The soy template's namespace.\n\t * @param {string} templateName The name of the template function.\n\t * @return {!function()}\n\t */\n\tstatic getTemplate(namespace, templateName) {\n\t\treturn function(opt_data, opt_ignored, opt_ijData) {\n\t\t\tif (!goog.loadedModules_[namespace]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'No template with namespace \"' + namespace + '\" has been loaded yet.'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn goog.loadedModules_[namespace][templateName](opt_data, opt_ignored, opt_ijData);\n\t\t};\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\thandleDataManagerCreated_() {\n\t\tsuper.handleDataManagerCreated_();\n\t\tthis.addMissingStateKeys_();\n\t}\n\n\t/**\n\t * Handles an intercepted soy template call. If the call is for a component's\n\t * main template, then it will be replaced with a call that incremental dom\n\t * can use for both handling an instance of that component and rendering it.\n\t * @param {!function()} originalFn The original template function that was\n\t *     intercepted.\n\t * @param {Object} data The data the template was called with.\n\t * @protected\n\t */\n\tstatic handleInterceptedCall_(originalFn, opt_data = {}) {\n\t\tvar args = [originalFn.componentCtor, null, []];\n\t\tfor (var key in opt_data) {\n\t\t\targs.push(key, opt_data[key]);\n\t\t}\n\t\tIncrementalDOM.elementVoid.apply(null, args);\n\t}\n\n\t/**\n\t * Checks if the given param type is html.\n\t * @param {string} name\n\t * @protected\n\t */\n\tisHtmlParam_(name) {\n\t\tvar state = this.component_.getDataManager().getStateInstance();\n\t\tif (state.getStateKeyConfig(name).isHtml) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = this.soyParamTypes_[name] || '';\n\t\treturn type.split('|').indexOf('html') !== -1;\n\t}\n\n\t/**\n\t * Registers the given templates to be used by `Soy` for the specified\n\t * component constructor.\n\t * @param {!Function} componentCtor The constructor of the component that\n\t *     should use the given templates.\n\t * @param {!Object} templates Object containing soy template functions.\n\t * @param {string=} mainTemplate The name of the main template that should be\n\t *     used to render the component. Defaults to \"render\".\n\t */\n\tstatic register(componentCtor, templates, mainTemplate = 'render') {\n\t\tcomponentCtor.RENDERER = Soy;\n\t\tcomponentCtor.TEMPLATE = SoyAop.getOriginalFn(templates[mainTemplate]);\n\t\tcomponentCtor.TEMPLATE.componentCtor = componentCtor;\n\t\tSoyAop.registerForInterception(templates, mainTemplate);\n\t\tComponentRegistry.register(componentCtor);\n\t}\n\n\t/**\n\t * Overrides the default method from `IncrementalDomRenderer` so the component's\n\t * soy template can be used for rendering.\n\t * @param {!Object} data Data passed to the component when rendering it.\n\t * @override\n\t */\n\trenderIncDom() {\n\t\tvar elementTemplate = this.component_.constructor.TEMPLATE;\n\t\tif (isFunction(elementTemplate) && !this.component_.render) {\n\t\t\telementTemplate = SoyAop.getOriginalFn(elementTemplate);\n\t\t\tSoyAop.startInterception(Soy.handleInterceptedCall_);\n\t\t\telementTemplate(this.buildTemplateData_(elementTemplate.params || []), null, ijData);\n\t\t\tSoyAop.stopInterception();\n\t\t} else {\n\t\t\tsuper.renderIncDom();\n\t\t}\n\t}\n\n\t/**\n\t * Sets the injected data object that should be passed to templates.\n\t * @param {Object} data\n\t */\n\tstatic setInjectedData(data) {\n\t\tijData = data || {};\n\t}\n\n\t/**\n\t * Overrides the original `IncrementalDomRenderer` method so that only\n\t * state keys used by the main template can cause updates.\n\t * @return {boolean}\n\t */\n\tshouldUpdate() {\n\t\tvar should = super.shouldUpdate();\n\t\tif (!should || this.component_.shouldUpdate) {\n\t\t\treturn should;\n\t\t}\n\n\t\tvar fn = this.component_.constructor.TEMPLATE;\n\t\tvar params = fn ? SoyAop.getOriginalFn(fn).params : [];\n\t\tfor (var i = 0; i < params.length; i++) {\n\t\t\tif (this.changes_[params[i]]) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Converts the given incremental dom function into an html string.\n\t * @param {!function()} incDomFn\n\t * @return {string}\n\t */\n\tstatic toHtmlString(incDomFn) {\n\t\tvar element = document.createElement('div');\n\t\tIncrementalDOM.patch(element, incDomFn);\n\t\treturn element.innerHTML;\n\t}\n\n\t/**\n\t * Converts the given html string into an incremental dom function.\n\t * @param {string|{contentKind: string, content: string}} value\n\t * @return {!function()}\n\t */\n\tstatic toIncDom(value) {\n\t\tif (isObject(value) && isString(value.content) && (value.contentKind === 'HTML')) {\n\t\t\tvalue = value.content;\n\t\t}\n\t\tif (isString(value)) {\n\t\t\tvalue = HTML2IncDom.buildFn(value);\n\t\t}\n\t\treturn value;\n\t}\n}\n\nSoy.RENDERER_NAME = 'soy';\n\nexport default Soy;\nexport { Soy, SoyAop };\n"],"sourceRoot":"/source/"}