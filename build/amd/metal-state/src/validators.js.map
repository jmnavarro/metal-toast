{"version":3,"sources":["validators.js"],"names":["validators","any","array","validateType","bool","func","number","object","string","arrayOf","validator","maybe","value","name","context","result","isInvalid","i","length","composeError","instanceOf","expectedClass","objectOf","typeValidator","key","oneOf","arrayOfValues","oneOfValue","oneOfType","arrayOfTypeValidators","shapeOf","shape","required","config","error","compName","constructor","renderer","getRenderer","parent","getParent","parentName","location","Error","getType","type","Array","isArray","expectedType","validatorFn"],"mappings":"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","file":"node_modules/metal-state/src/validators.js","sourcesContent":["'use strict';\n\nimport { getFunctionName, isDef, isDefAndNotNull, isNull } from 'metal';\n\n/**\n * Provides access to various type validators that will return an\n * instance of Error when validation fails. Note that all type validators\n * will also accept null or undefined values. To not accept these you should\n * instead make your state property required.\n */\nconst validators = {\n\tany: () => () => true,\n\tarray: validateType('array'),\n\tbool: validateType('boolean'),\n\tfunc: validateType('function'),\n\tnumber: validateType('number'),\n\tobject: validateType('object'),\n\tstring: validateType('string'),\n\n\t/**\n\t * Creates a validator that checks the values of an array against a type.\n\t * @param {function()} validator Type validator to check each index against.\n\t * @return {function()} Validator.\n\t */\n\tarrayOf: function(validator) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tvar result = validators.array(value, name, context);\n\t\t\tif (isInvalid(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\tif (isInvalid(validator(value[i], name, context))) {\n\t\t\t\t\treturn composeError('Expected an array of single type', name, context);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\t/**\n\t * Creates a validator that compares a value to a specific class.\n\t * @param {function()} expectedClass Class to check value against.\n\t * @return {function()} Validator.\n\t */\n\tinstanceOf: function(expectedClass) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tif (!(value instanceof expectedClass)) {\n\t\t\t\treturn composeError(\n\t\t\t\t\t`Expected instance of ${expectedClass}`,\n\t\t\t\t\tname,\n\t\t\t\t\tcontext\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\t/**\n\t * Creates a validator that checks the values of an object against a type.\n\t * @param {function()} typeValidator Validator to check value against.\n\t * @return {function()} Validator.\n\t */\n\tobjectOf: function(typeValidator) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tfor (let key in value) {\n\t\t\t\tif (isInvalid(typeValidator(value[key]))) {\n\t\t\t\t\treturn composeError('Expected object of one type', name, context);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t},\n\n\t/**\n\t * Creates a validator that checks equality against specific values.\n\t * @param {!Array} arrayOfValues Array of values to check equality against.\n\t * @return {function()} Validator.\n\t */\n\toneOf: function(arrayOfValues) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tconst result = validators.array(arrayOfValues, name, context);\n\t\t\tif (isInvalid(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayOfValues.length; i++) {\n\t\t\t\tconst oneOfValue = arrayOfValues[i];\n\t\t\t\tif (value === oneOfValue) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn composeError('Expected one of given values.', name, context);\n\t\t});\n\t},\n\n\t/**\n\t * Creates a validator that checks a value against multiple types and only has\n\t * to pass one.\n\t * @param {!Array} arrayOfTypeValidators Array of validators to check value\n\t *     against.\n\t * @return {function()} Validator.\n\t */\n\toneOfType: function(arrayOfTypeValidators) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tconst result = validators.array(arrayOfTypeValidators, name, context);\n\t\t\tif (isInvalid(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < arrayOfTypeValidators.length; i++) {\n\t\t\t\tif (!isInvalid(arrayOfTypeValidators[i](value, name, context))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn composeError('Expected one of given types.', name, context);\n\t\t});\n\t},\n\n\t/**\n\t * Creates a validator that checks the shape of an object.\n\t * @param {!Object} shape An object containing type validators for each key.\n\t * @return {function()} Validator.\n\t */\n\tshapeOf: function(shape) {\n\t\treturn maybe((value, name, context) => {\n\t\t\tconst result = validators.object(shape, name, context);\n\t\t\tif (isInvalid(result)) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tfor (let key in shape) {\n\t\t\t\tlet required = false;\n\t\t\t\tlet validator = shape[key];\n\t\t\t\tif (validator.config) {\n\t\t\t\t\trequired = validator.config.required;\n\t\t\t\t\tvalidator = validator.config.validator;\n\t\t\t\t}\n\t\t\t\tif ((required && !isDefAndNotNull(value[key])) ||\n\t\t\t\t\tisInvalid(validator(value[key]))) {\n\t\t\t\t\treturn composeError(\n\t\t\t\t\t\t'Expected object with a specific shape',\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tcontext\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\t}\n};\n\n/**\n * Composes a warning a warning message.\n * @param {string} error Error message to display to console.\n * @param {?string} name Name of state property that is giving the error.\n * @param {Object} context\n * @return {!Error} Instance of Error class.\n */\nfunction composeError(error, name, context) {\n\tconst compName = context ? getFunctionName(context.constructor) : null;\n\tvar renderer = context && context.getRenderer && context.getRenderer();\n\tconst parent = renderer && renderer.getParent ?\n\t\tcontext.getRenderer().getParent() :\n\t\tnull;\n\tconst parentName = parent ? getFunctionName(parent.constructor) : null;\n\tconst location = parentName ? `Check render method of '${parentName}'.` : '';\n\treturn new Error(\n\t\t`Warning: Invalid state passed to '${name}'. ` +\n\t\t`${error} Passed to '${compName}'. ${location}`\n\t);\n}\n\n/**\n * Returns the type of the given value.\n * @param {*} value Any value.\n * @return {string} Type of value.\n */\nfunction getType(value) {\n\tconst type = typeof value;\n\tif (Array.isArray(value)) {\n\t\treturn 'array';\n\t}\n\treturn type;\n}\n\n/**\n * Checks if the given validator result says that the value is invalid.\n * @param {boolean|!Error} result\n * @return {boolean}\n */\nfunction isInvalid(result) {\n\treturn result instanceof Error;\n}\n\n/**\n * Creates a validator that checks a value against a single type, null, or\n * undefined.\n * @param {function()} typeValidator Validator to check value against.\n * @return {function()} Validator.\n */\nfunction maybe(typeValidator) {\n\treturn (value, name, context) => {\n\t\tif (!isDef(value) || isNull(value)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn typeValidator(value, name, context);\n\t};\n}\n\n/**\n * Creates a validator that checks against a specific primitive type. If this\n * validator is called with no arguments, it will return the actual validator\n * function instead of running it. That's done to allow all validators to be\n * used consistently, since some (like `arrayOf`) always require that you call\n * the function before receiving the actual validator.\n * @param {string} expectedType Type to check against.\n * @return {function()} Validator if called with arguments, or wrapper function\n *     that returns the validator otherwise.\n */\nfunction validateType(expectedType) {\n\tconst validatorFn = maybe((value, name, context) => {\n\t\tconst type = getType(value);\n\t\tif (type !== expectedType) {\n\t\t\treturn composeError(\n\t\t\t\t`Expected type '${expectedType}', but received type '${type}'.`,\n\t\t\t\tname,\n\t\t\t\tcontext\n\t\t\t);\n\t\t}\n\t\treturn true;\n\t});\n\treturn (...args) => {\n\t\tif (args.length === 0) {\n\t\t\treturn validatorFn;\n\t\t} else {\n\t\t\treturn validatorFn(...args);\n\t\t}\n\t};\n}\n\nexport default validators;\n"],"sourceRoot":"/source/"}